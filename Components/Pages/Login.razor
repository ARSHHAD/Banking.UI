@page "/login"
@inject NavigationManager Navigation
@inject IAuthService _authService
@using Banking.Domain.Models.ViewModels
@using Banking.UI.Services

<div class="container d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="row w-100">
        <div class="col-md-4 mx-auto">

            <div class="text-center mb-4">
                <h1>Login</h1>
            </div>
            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">

                <div class="form-group p-2">
                    <label for="username">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                </div>

                <div class="form-group p-2">
                    <label for="password">Password</label>
                    <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" />
                </div>

                <div class="d-flex justify-content-center p-2">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
                <div class="p-3">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                </div>
            </EditForm>
        </div>
    </div>
</div>



@if (errorMessage != null)
{
    <div class="alert alert-danger mt-3">
        @errorMessage
    </div>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await _authService.Login(loginModel);

            if (!response.Success)
            {
                errorMessage = response.Message;
            }
            else
            {
                Navigation.NavigateTo("/dashboard");
            }

        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
